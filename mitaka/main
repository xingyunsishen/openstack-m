#!/bin/bash

export force="0"

export local_ip=$(ifconfig eth0 | grep "inet addr" | awk -F : '{print $2}' | awk '{print $1}')
export local_net=$(ipcalc -n $local_ip 255.255.255.0 | grep "Network" | awk '{print $2}')

TOPDIR=$(cd $(dirname "$0") && pwd)
cd $TOPDIR

[[ -e ./proxy ]] && . ./proxy

#----------------------------------------------------------------------------------------------
# Begin to setup ntp
#----------------------------------------------------------------------------------------------

conf_key="/etc/chrony/chrony.keys"
if [[ `cat $conf_key | grep "YOB0kNkh" | wc -l` -eq 0 || $force -gt 0 ]]; then
    apt-get update
    apt install -y chrony
    conf_file="/etc/chrony/chrony.conf"

    cat <<"EOF"> $conf_file
keyfile /etc/chrony/chrony.keys
commandkey 1
driftfile /var/lib/chrony/chrony.drift
log tracking measurements statistics
logdir /var/log/chrony
maxupdateskew 100.0
dumponexit
dumpdir /var/lib/chrony
local stratum 10
allow 10/8
allow 192.168/16
allow 172.16/12
allow 10.0.3.0/24
logchange 0.5
rtconutc
EOF

    echo "1 YOB0kNkh" > $conf_key
    service chrony restart
fi


#----------------------------------------------------------------------------------------------
# Begin to setup package
#----------------------------------------------------------------------------------------------

if [[ ! -e /etc/apt/sources.list.d/cloudarchive-mitaka.list || $force -gt 0 ]]; then
    apt-get -y update
    apt-get install -y software-properties-common
    add-apt-repository -y cloud-archive:mitaka
    apt-get -y update && apt-get -y dist-upgrade
    apt-get install -y python-openstackclient crudini ipcalc
    sed -i "/sleep/d" /etc/init/failsafe.conf
fi


#----------------------------------------------------------------------------------------------
# Begin to setup package
#----------------------------------------------------------------------------------------------


conf_file="/etc/mysql/my.cnf"

if [[ ! -e $conf_file || $force -gt 0 ]]; then
    apt install -y mariadb-server python-pymysql
    cd /etc/mysql
    find . -name "*.cnf" | xargs -i sed -i "s,utf8mb4,utf8,g" {}
    cp -rf $TOPDIR/my.conf $conf_file
    sed -i "s,127.0.0.1,0.0.0.0,g" $conf_file
    service mysql restart
fi

#----------------------------------------------------------------------------------------------
# Begin to setup memcached
#----------------------------------------------------------------------------------------------

conf_file="/etc/memcached.conf"
if [[ ! -e $conf_file || $force -gt 0 ]]; then
    apt install -y memcached python-memcache
    conf_file="/etc/memcached.conf"
    sed -i "s,127.0.0.1,0.0.0.0,g" $conf_file
    service memcached restart
fi


#----------------------------------------------------------------------------------------------
# Begin to setup rabbitmq
#----------------------------------------------------------------------------------------------

if [[ ! -e /etc/init.d/rabbitmq-server || $force -gt 0 ]]; then
    apt install -y rabbitmq-server
    rabbitmqctl add_user openstack RABBIT_PASS
    rabbitmqctl set_permissions openstack ".*" ".*" ".*"
fi


#----------------------------------------------------------------------------------------------
# Begin to setup keystone
#----------------------------------------------------------------------------------------------

if [[ ! -e /etc/keystone/keystone.conf || $force -gt 0 ]]; then
    mysql -uroot -proot -e "drop database keystone;"

    cat <<"EOF"> ~/keystone.sql
CREATE DATABASE keystone;
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY 'KEYSTONE_DBPASS';
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'KEYSTONE_DBPASS';
EOF

    mysql -uroot -proot < ~/keystone.sql
    apt install -y keystone
    crudini --set /etc/keystone/keystone.conf DEFAULT admin_token ADMIN_TOKEN
    crudini --set /etc/keystone/keystone.conf database connection mysql://keystone:KEYSTONE_DBPASS@controller/keystone
    crudini --set /etc/keystone/keystone.conf memcache servers localhost:11211
    crudini --set /etc/keystone/keystone.conf token provider keystone.token.providers.uuid.Provider
    crudini --set /etc/keystone/keystone.conf token driver keystone.token.persistence.backends.memcache.Token
    crudini --set /etc/keystone/keystone.conf revoke driver keystone.contrib.revoke.backends.sql.Revoke
    crudini --set /etc/keystone/keystone.conf DEFAULT verbose True
    crudini --set /etc/keystone/keystone.conf DEFAULT public_workers 1
    crudini --set /etc/keystone/keystone.conf DEFAULT admin_workers 1
    su -s /bin/sh -c "keystone-manage db_sync" keystone
    keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
    keystone-manage credential_setup --keystone-user keystone --keystone-group keystone

    keystone-manage bootstrap --bootstrap-password admin \
      --bootstrap-admin-url http://controller:35357/v3/ \
      --bootstrap-internal-url http://controller:35357/v3/ \
      --bootstrap-public-url http://controller:5000/v3/ \
      --bootstrap-region-id RegionOne

    service keystone restart

cat <<"EOF">~/adminrc
unset OS_USERNAME
unset OS_PASSWORD
unset OS_PROJECT_NAME
unset OS_USER_DOMAIN_NAME
unset OS_PROJECT_DOMAIN_NAME
unset OS_AUTH_URL
unset OS_IDENTITY_API_VERSION
unset OS_TOKEN
unset OS_URL

export OS_USERNAME=admin
export OS_PASSWORD=admin
export OS_PROJECT_NAME=admin
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_DOMAIN_NAME=default
export OS_AUTH_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3
export PS1="adminrc\u@\h:\w\$ "
EOF

cat <<"EOF">~/rootrc
unset OS_USERNAME
unset OS_PASSWORD
unset OS_PROJECT_NAME
unset OS_USER_DOMAIN_NAME
unset OS_PROJECT_DOMAIN_NAME
unset OS_AUTH_URL
unset OS_IDENTITY_API_VERSION
unset OS_TOKEN
unset OS_URL

export OS_TOKEN=ADMIN_TOKEN
export OS_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3
export PS1="rootrc\u@\h:\w\$ "
EOF

cat <<"EOF">~/demorc
unset OS_USERNAME
unset OS_PASSWORD
unset OS_PROJECT_NAME
unset OS_USER_DOMAIN_NAME
unset OS_PROJECT_DOMAIN_NAME
unset OS_AUTH_URL
unset OS_IDENTITY_API_VERSION
unset OS_TOKEN
unset OS_URL

export OS_USERNAME=demo
export OS_PASSWORD=demo
export OS_PROJECT_NAME=demo
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_DOMAIN_NAME=default
export OS_AUTH_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3
export PS1="demorc\u@\h:\w\$ "
EOF

    # begin to initial the keystone settings.
    . ~/adminrc
    openstack project create --domain default \
  --description "Service Project" service
    openstack project create --domain default \
  --description "Demo Project" demo
    openstack user create --domain default \
  --password demo demo

    openstack role create user
    openstack role add --project demo --user demo user

fi

#----------------------------------------------------------------------------------------------
# Begin to setup glance
#----------------------------------------------------------------------------------------------

if [[ ! -e /etc/glance/glance-api.conf || $force -gt 0 ]]; then

    mysql -uroot -proot -e "drop database glance;"

    cat <<"EOF"> ~/glance.sql
CREATE DATABASE glance;
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY 'GLANCE_DBPASS';
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY 'GLANCE_DBPASS';
EOF

    mysql -uroot -proot < ~/glance.sql
    . ~/adminrc
    openstack user create --domain default --password glance glance
    openstack role add --project service --user glance admin
    openstack service create --name glance \
      --description "OpenStack Image" image
    openstack endpoint create --region RegionOne \
      image public http://controller:9292
    openstack endpoint create --region RegionOne \
      image internal http://controller:9292
    openstack endpoint create --region RegionOne \
      image admin http://controller:9292

    apt-get install -y glance

crudini --set /etc/glance/glance-api.conf database connection mysql+pymysql://glance:GLANCE_DBPASS@controller/glance
crudini --set /etc/glance/glance-api.conf keystone_authtoken auth_uri http://controller:5000
crudini --set /etc/glance/glance-api.conf keystone_authtoken auth_url http://controller:35357
crudini --set /etc/glance/glance-api.conf keystone_authtoken memcached_servers controller:11211
crudini --set /etc/glance/glance-api.conf keystone_authtoken auth_type password
crudini --set /etc/glance/glance-api.conf keystone_authtoken project_domain_name default
crudini --set /etc/glance/glance-api.conf keystone_authtoken user_domain_name default
crudini --set /etc/glance/glance-api.conf keystone_authtoken project_name service
crudini --set /etc/glance/glance-api.conf keystone_authtoken username glance
crudini --set /etc/glance/glance-api.conf keystone_authtoken password glance
crudini --set /etc/glance/glance-api.conf paste_deploy flavor keystone
crudini --set /etc/glance/glance-api.conf glance_store stores file,http
crudini --set /etc/glance/glance-api.conf glance_store default_store file
crudini --set /etc/glance/glance-api.conf glance_store filesystem_store_datadir /var/lib/glance/images/
crudini --set /etc/glance/glance-api.conf DEFAULT workers 1

crudini --set /etc/glance/glance-registry.conf database connection mysql+pymysql://glance:GLANCE_DBPASS@controller/glance
crudini --set /etc/glance/glance-registry.conf keystone_authtoken auth_uri http://controller:5000
crudini --set /etc/glance/glance-registry.conf keystone_authtoken auth_url http://controller:35357
crudini --set /etc/glance/glance-registry.conf keystone_authtoken memcached_servers controller:11211
crudini --set /etc/glance/glance-registry.conf keystone_authtoken auth_type password
crudini --set /etc/glance/glance-registry.conf keystone_authtoken project_domain_name default
crudini --set /etc/glance/glance-registry.conf keystone_authtoken user_domain_name default
crudini --set /etc/glance/glance-registry.conf keystone_authtoken project_name service
crudini --set /etc/glance/glance-registry.conf keystone_authtoken username glance
crudini --set /etc/glance/glance-registry.conf keystone_authtoken password glance
crudini --set /etc/glance/glance-registry.conf paste_deploy flavor keystone
crudini --set /etc/glance/glance-registry.conf DEFAULT workers 1

    su -s /bin/sh -c "glance-manage db_sync" glance
    service glance-registry restart
    service glance-api restart

fi


#----------------------------------------------------------------------------------------------
# Begin to setup nova api
#----------------------------------------------------------------------------------------------

if [[ ! -e /etc/nova/nova.conf || $force -gt 0 ]]; then

    mysql -uroot -proot -e "drop database nova_api;"
    mysql -uroot -proot -e "drop database nova;"

    cat <<"EOF">~/nova.sql
CREATE DATABASE nova_api;
CREATE DATABASE nova;
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY 'NOVA_DBPASS';
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY 'NOVA_DBPASS';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY 'NOVA_DBPASS';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY 'NOVA_DBPASS';
EOF

    mysql -uroot -proot < ~/nova.sql

    . ~/adminrc
    openstack user create --domain default \
  --password nova nova
    openstack role add --project service --user nova admin
    openstack service create --name nova \
  --description "OpenStack Compute" compute

    openstack endpoint create --region RegionOne \
  compute public http://controller:8774/v2.1/%\(tenant_id\)s

    openstack endpoint create --region RegionOne \
  compute internal http://controller:8774/v2.1/%\(tenant_id\)s

    openstack endpoint create --region RegionOne \
  compute admin http://controller:8774/v2.1/%\(tenant_id\)s

    apt install -y nova-api nova-conductor nova-consoleauth \
  nova-novncproxy nova-scheduler

crudini --set /etc/nova/nova.conf DEFAULT enabled_apis osapi_compute,metadata
crudini --set /etc/nova/nova.conf api_database connection mysql+pymysql://nova:NOVA_DBPASS@controller/nova_api
crudini --set /etc/nova/nova.conf database connection mysql+pymysql://nova:NOVA_DBPASS@controller/nova
crudini --set /etc/nova/nova.conf DEFAULT rpc_backend rabbit
crudini --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_host controller
crudini --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_userid openstack
crudini --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_password RABBIT_PASS
crudini --set /etc/nova/nova.conf DEFAULT auth_strategy keystone
crudini --set /etc/nova/nova.conf keystone_authtoken auth_uri http://controller:5000
crudini --set /etc/nova/nova.conf keystone_authtoken auth_url http://controller:35357
crudini --set /etc/nova/nova.conf keystone_authtoken memcached_servers controller:11211
crudini --set /etc/nova/nova.conf keystone_authtoken auth_type password
crudini --set /etc/nova/nova.conf keystone_authtoken project_domain_name default
crudini --set /etc/nova/nova.conf keystone_authtoken user_domain_name default
crudini --set /etc/nova/nova.conf keystone_authtoken project_name service
crudini --set /etc/nova/nova.conf keystone_authtoken username nova
crudini --set /etc/nova/nova.conf keystone_authtoken password nova
crudini --set /etc/nova/nova.conf DEFAULT my_ip $local_ip
crudini --set /etc/nova/nova.conf DEFAULT use_neutron True
crudini --set /etc/nova/nova.conf DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver
crudini --set /etc/nova/nova.conf vnc vncserver_listen $local_ip
crudini --set /etc/nova/nova.conf vnc vncserver_proxyclient_address $local_ip
crudini --set /etc/nova/nova.conf glance api_servers http://controller:9292
crudini --set /etc/nova/nova.conf oslo_concurrency lock_path /var/lib/nova/tmp

    su -s /bin/sh -c "nova-manage api_db sync" nova
    su -s /bin/sh -c "nova-manage db sync" nova

    service nova-api restart
    service nova-consoleauth restart
    service nova-scheduler restart
    service nova-conductor restart
    service nova-novncproxy restart
fi


#----------------------------------------------------------------------------------------------
# Begin to setup keystone
#----------------------------------------------------------------------------------------------

if [[ ! -e /etc/nova/nova-compute.conf || $force -gt 0 ]]; then
    apt-get install -y nova-compute

crudini --set /etc/nova/nova.conf DEFAULT rpc_backend rabbit
crudini --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_host controller
crudini --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_userid openstack
crudini --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_password RABBIT_PASS
crudini --set /etc/nova/nova.conf DEFAULT auth_strategy keystone
crudini --set /etc/nova/nova.conf keystone_authtoken auth_uri http://controller:5000
crudini --set /etc/nova/nova.conf keystone_authtoken auth_url http://controller:35357
crudini --set /etc/nova/nova.conf keystone_authtoken memcached_servers controller:11211
crudini --set /etc/nova/nova.conf keystone_authtoken auth_type password
crudini --set /etc/nova/nova.conf keystone_authtoken project_domain_name default
crudini --set /etc/nova/nova.conf keystone_authtoken user_domain_name default
crudini --set /etc/nova/nova.conf keystone_authtoken project_name service
crudini --set /etc/nova/nova.conf keystone_authtoken username nova
crudini --set /etc/nova/nova.conf keystone_authtoken password nova
crudini --set /etc/nova/nova.conf DEFAULT use_neutron True
crudini --set /etc/nova/nova.conf DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver
crudini --set /etc/nova/nova.conf vnc enabled True
crudini --set /etc/nova/nova.conf vnc vncserver_listen 0.0.0.0
crudini --set /etc/nova/nova.conf vnc vncserver_proxyclient_address $local_ip
crudini --set /etc/nova/nova.conf vnc novncproxy_base_url http://controller:6080/vnc_auto.html
crudini --set /etc/nova/nova.conf glance api_servers http://controller:9292
crudini --set /etc/nova/nova.conf oslo_concurrency lock_path /var/lib/nova/tmp
crudini --set /etc/nova/nova.conf DEFAULT compute_driver ibvirt.LibvirtDriver
    cat <<"EOF">/etc/nova/nova-compute.conf
[libvirt]
virt_type = qemu
EOF

service nova-compute restart
fi


#----------------------------------------------------------------------------------------------
# Begin to setup keystone
#----------------------------------------------------------------------------------------------

if [[ ! -e /etc/neutron/neutron.conf || $force -gt 0 ]]; then

    mysql -uroot -proot -e "drop database neutron;"

    cat <<"EOF">~/neutron.sql
CREATE DATABASE neutron;
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' \
  IDENTIFIED BY 'NEUTRON_DBPASS';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' \
  IDENTIFIED BY 'NEUTRON_DBPASS';
EOF

    mysql -uroot -proot < ~/neutron.sql

    . ~/adminrc
    openstack user create --domain default --password neutron neutron
    openstack role add --project service --user neutron admin
    openstack service create --name neutron \
      --description "OpenStack Networking" network

    openstack endpoint create --region RegionOne \
      network public http://controller:9696

    openstack endpoint create --region RegionOne \
      network internal http://controller:9696

    openstack endpoint create --region RegionOne \
      network admin http://controller:9696

    apt-get install -y neutron-server \
        neutron-plugin-ml2 neutron-l3-agent \
        neutron-dhcp-agent neutron-metadata-agent \
        neutron-plugin-ml2 neutron-plugin-openvswitch-agent \
        neutron-l3-agent neutron-dhcp-agent


    echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf
    echo 'net.ipv4.conf.all.rp_filter=0' >> /etc/sysctl.conf
    echo 'net.ipv4.conf.default.rp_filter=0' >> /etc/sysctl.conf


    # Change the interface file
    ovs-vsctl add-br br-ex
    ovs-vsctl add-port br-ex eth0
    ovs-vsctl add-br br-tun

    ifdown eth0
    ifdown br-ex
    ifup br-ex


crudini --set /etc/neutron/neutron.conf DEFAULT auth_strategy keystone
crudini --set /etc/neutron/neutron.conf DEFAULT core_plugin ml2
crudini --set /etc/neutron/neutron.conf DEFAULT service_plugins router
crudini --set /etc/neutron/neutron.conf DEFAULT allow_overlapping_ips True
crudini --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_status_changes true
crudini --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_data_changes true
crudini --set /etc/neutron/neutron.conf DEFAULT verbose true
crudini --set /etc/neutron/neutron.conf DEFAULT rpc_backend rabbit
crudini --set /etc/neutron/neutron.conf DEFAULT api_workers 1
crudini --set /etc/neutron/neutron.conf DEFAULT rpc_workers 1
crudini --set /etc/neutron/neutron.conf nova auth_url http://controller:35357
crudini --set /etc/neutron/neutron.conf nova auth_type password
crudini --set /etc/neutron/neutron.conf nova project_domain_name default
crudini --set /etc/neutron/neutron.conf nova user_domain_name default
crudini --set /etc/neutron/neutron.conf nova region_name RegionOne
crudini --set /etc/neutron/neutron.conf nova project_name service
crudini --set /etc/neutron/neutron.conf nova username nova
crudini --set /etc/neutron/neutron.conf nova password nova
crudini --set /etc/neutron/neutron.conf agent root_helper "sudo /usr/bin/neutron-rootwrap /etc/neutron/rootwrap.conf"
crudini --set /etc/neutron/neutron.conf database connection mysql+pymysql://neutron:NEUTRON_PASS@controller/neutron
crudini --set /etc/neutron/neutron.conf keystone_authtoken auth_uri http://controller:5000
crudini --set /etc/neutron/neutron.conf keystone_authtoken auth_url http://controller:35357
crudini --set /etc/neutron/neutron.conf keystone_authtoken memcached_servers controller:11211
crudini --set /etc/neutron/neutron.conf keystone_authtoken auth_type password
crudini --set /etc/neutron/neutron.conf keystone_authtoken project_domain_name default
crudini --set /etc/neutron/neutron.conf keystone_authtoken user_domain_name default
crudini --set /etc/neutron/neutron.conf keystone_authtoken project_name service
crudini --set /etc/neutron/neutron.conf keystone_authtoken username neutron
crudini --set /etc/neutron/neutron.conf keystone_authtoken password neutron
crudini --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_host controller
crudini --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_userid openstack
crudini --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_password RABBIT_PASS

echo "dhcp-option-force=26,1450" > /etc/neutron/dnsmasq-neutron.conf
crudini --set /etc/neutron/dhcp_agent.ini DEFAULT verbose True
crudini --set /etc/neutron/dhcp_agent.ini DEFAULT interface_driver neutron.agent.linux.interface.OVSInterfaceDriver
crudini --set /etc/neutron/dhcp_agent.ini DEFAULT dhcp_driver neutron.agent.linux.dhcp.Dnsmasq
crudini --set /etc/neutron/dhcp_agent.ini DEFAULT enable_isolated_metadata True
crudini --set /etc/neutron/dhcp_agent.ini DEFAULT dnsmasq_config_file /etc/neutron/dnsmasq-neutron.conf
crudini --set /etc/neutron/l3_agent.ini DEFAULT verbose True
crudini --set /etc/neutron/l3_agent.ini DEFAULT interface_driver neutron.agent.linux.interface.OVSInterfaceDriver
crudini --set /etc/neutron/l3_agent.ini DEFAULT use_namespaces True
crudini --set /etc/neutron/l3_agent.ini DEFAULT external_network_bridge br-ex
crudini --set /etc/neutron/l3_agent.ini DEFAULT api_workers 1
crudini --set /etc/neutron/l3_agent.ini DEFAULT rpc_workers 1

crudini --set /etc/neutron/metadata_agent.ini DEFAULT verbose True
crudini --set /etc/neutron/metadata_agent.ini DEFAULT nova_metadata_ip controller
crudini --set /etc/neutron/metadata_agent.ini DEFAULT metadata_proxy_shared_secret METADATA_SECRET
crudini --set /etc/neutron/metadata_agent.ini DEFAULT metadata_workers 1

crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 type_drivers flat,gre,vxlan
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types gre,vxlan
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers openvswitch,l2population
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 extension_drivers port_security
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_flat flat_networks external
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_gre tunnel_id_ranges 1:4096
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_vxlan vni_ranges 1:4096
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup enable_ipset True
crudini --set /etc/neutron/plugins/ml2/openvswitch_agent.ini ovs local_ip 10.0.3.10
crudini --set /etc/neutron/plugins/ml2/openvswitch_agent.ini ovs bridge_mappings external:br-ex
crudini --set /etc/neutron/plugins/ml2/openvswitch_agent.ini agent tunnel_types gre,vxlan
crudini --set /etc/neutron/plugins/ml2/openvswitch_agent.ini agent l2_population True
crudini --set /etc/neutron/plugins/ml2/openvswitch_agent.ini agent prevent_arp_spoofing True
crudini --set /etc/neutron/plugins/ml2/openvswitch_agent.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
crudini --set /etc/neutron/plugins/ml2/openvswitch_agent.ini securitygroup enable_security_group True
crudini --set /etc/nova/nova.conf neutron url http://controller:9696
crudini --set /etc/nova/nova.conf neutron auth_url http://controller:35357
crudini --set /etc/nova/nova.conf neutron auth_type password
crudini --set /etc/nova/nova.conf neutron project_domain_name default
crudini --set /etc/nova/nova.conf neutron user_domain_name default
crudini --set /etc/nova/nova.conf neutron region_name RegionOne
crudini --set /etc/nova/nova.conf neutron project_name service
crudini --set /etc/nova/nova.conf neutron username neutron
crudini --set /etc/nova/nova.conf neutron password neutron
crudini --set /etc/nova/nova.conf neutron service_metadata_proxy True
crudini --set /etc/nova/nova.conf neutron metadata_proxy_shared_secret METADATA_SECRET


su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \
  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

service nova-api restart
service nova-compute restart
for service in server openvswitch-agent dhcp-agent metadata-agent l3-agent; do
    service neutron-$service restart
done

fi
